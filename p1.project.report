I chose the elevator at The Carlton House for my presentation. The elevator's control interface was nice to the eyes and had a straighforward design. The only modification I would make on the elevator's control interface would be to swap the alarm and phone buttons with the open and close door buttons. I modeled my touch screen elevator control interface after the carlton's elevator control interface because I really liked their design and I wanted my control interface to simulate interacting with a elevator that has buttons.

When I initially interacted with the elevator’s control interface, I couldn’t find any issues. I thought the design looked clean and it was very easy to distinguish the functionality of every button. The only thing that might be identified as an “issue” would be the lighting of the buttons. Instead of lighting up when a button is pressed, the floor buttons are lit by default. When a floor button is pressed, the buttons light turns off until the task is completed. However, I don’t see that as a problem but that was the only thing that I was able to identify as a possible issue.

The elevator’s control interface is very strong in its design. The floor buttons are arranged in a vertical orientation, which makes for a clear and simplified interface. The floor number is also arranged horizontally with the button so that it cannot possibly be confused with another floor. The other buttons are grouped together underneath the floor buttons and have symbols that clearly identify their functionality. For example: if you are stuck in the elevator, you can easily understand which button is the alarm because it has a bell symbol right next to it. Every button has a straightforward symbol which should not cause any sort of confusion. The phone button even has text on it stating “push the button for help light flashed when call is answered” for the possibility that operators weren’t aware of the flashing light.

The only reason that I use an elevator is to get on a different floor than I’m already on. If I’m in New York city and need to get to the 50th floor, I much rather take the elevator than walk up 50 flights of stairs. Sometimes I notice that the elevator is about to close on somebody, so I press the open-door button to allow them to enter the elevator.

A user typically interacts with an elevator by initially pressing a button to call the elevator. If they are on the first floor, then there is usually one button to press. If they are on a higher floor, they have the option to press the up or down button. After that, the user waits for the elevator to reach their floor and open. Then the user enters the elevator, and then they press the floor button for the floor that they want to go to.

The elevator provides feedback to the user via lights and sounds. For example, if you were in the elevator and wanted to go to the 4th floor, you would press the button next to the number 4 symbol which would cause the light to turn off and the elevator would take you to the 4th floor. After you arrive at the 4th floor, the button would light back up and the elevator would make a ding sound.

I don’t think that there are any common mistakes with the elevator control interface that I chose. The straightforward design makes it very difficult to incorrectly use the interface. The only mistake that I think a user could make is pressing the close door button when they meant to press the open-door button or vice versa. However, the symbols clearly distinguish that one would open the doors and the other would close the doors.

An improvement that I would make on the control interface would be to swap the open and close door buttons with the alarm and call button. This is more of a personal touch on the control interface, but I think it makes sense to have the emergency buttons on the bottom where they can’t be accidentally pressed. 
